#ejecutar con make -f Makefile_Tests bonus || SRCS 	= $(wildcard *.c)
C		= cc
CFLAGS	= -Wall -Wextra -Werror -g3
LDFLAGS = -lbsd
NAME	= libft.out
SRCS 	= ft_atoi.c ft_bzero.c ft_calloc.c ft_isalnum.c ft_isalpha.c \
	ft_isascii.c ft_isdigit.c ft_isprint.c ft_memchr.c ft_memcmp.c \
	ft_memcpy.c ft_memmove.c ft_memset.c ft_strchr.c ft_strdup.c \
	ft_strjoin.c ft_strlcat.c ft_strlcpy.c ft_strlen.c ft_strncmp.c \
	ft_strnstr.c ft_strrchr.c ft_substr.c ft_tolower.c ft_toupper.c \
	ft_strtrim.c ft_putchar_fd.c ft_split.c ft_itoa.c ft_strmapi.c \
	ft_putnbr_fd.c ft_putendl_fd.c ft_putstr_fd.c ft_striteri.c \
	TEST/libft_test.c
SRCS_BONUS = $(wildcard *_bonus.c)
OBJS	= ${SRCS:.c=.o}
OBJS_BONUS = ${SRCS_BONUS:.c=.o}
RM		= rm -f

#regla principal.
all: ${NAME}

#regla genera el ejecutable a partir de los .o .La segunda linea limpia los .o
${NAME}: ${OBJS}
	${C} ${CFLAGS} -I. ${OBJS} -o ${NAME} ${LDFLAGS}
	${RM} ${OBJS} ${OBJS_BONUS}

#regla genera los .o
%.o: %.c
	${C} ${CFLAGS} -I. -c $< -o $@

bonus: ${OBJS} ${OBJS_BONUS}
	ar -rc ${NAME} ${OBJS} ${OBJS_BONUS}

#regla para limpiar los .o
clean:
	${RM} ${OBJS} ${OBJS_BONUS}

#regla para limpiar los .o y el ejecutable
fclean:	clean
	${RM} ${NAME}

#regla de rebuild
re:	fclean all

.PHONY:	all clean fclean re
